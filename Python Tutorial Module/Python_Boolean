Booleans represent one of two values: True or False. 

Boolean Values :
-In programming you often need to know if an expression is True or False.
-You can evaluate any expression in Python, and get one of two answers, True or False.
-When you compare two values, the expression is evaluated and Python returns the Boolean answer:

> Eg-1:
print(10 > 9) # True
print(10 == 9) # False
print(10 < 9) # False

> Eg-2:
a = 200
b = 33
if b > a:
  print("b is greater than a")
else:
  print("b is not greater than a")  # Output : b is not greater than a as 33 is less than 200
  
  
> Most Values are True
-Almost any value is evaluated to True if it has some sort of content.

-Any string is True, except empty strings.

-Any number is True, except 0.

-Any list, tuple, set, and dictionary are True, except empty ones.

> Eg-3:
print(bool("abc"))  # True
print(bool(123))    # True
print(bool(["apple", "cherry", "banana"])) # True



Some Values are False:

-In fact, there are not many values that evaluate to False, except empty values, such as (), [], {}, "", the number 0, and the value None. And of course the value False evaluates to False.
> Eg-4:
print(bool(False))
print(bool(None))
print(bool(0))
print(bool(""))
print(bool(()))
print(bool([]))
print(bool({}))


> Eg-5:
def myFunction() :
  return True
if myFunction():
  print("YES!")
else:
  print("NO!") # YES!
  
  
> Eg-6:
x = 200
print(isinstance(x, int)) # True
