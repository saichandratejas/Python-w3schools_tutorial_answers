Dictionary :
- Dictionaries are used to store data values in key:value pairs.
- A dictionary is a collection which is ordered*, changeable and do not allow duplicates.thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}

Dictionary Items : 
- Dictionary items are ordered, changeable, and does not allow duplicates.
- Dictionary items are presented in key:value pairs, and can be referred to by using the key name.

> Eg-1 : Print the "brand" value of the dictionary:

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
print(thisdict["brand"])   # Ford

> Eg-2 :
- Duplicates Not Allowed
- Dictionaries cannot have two items with the same key

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964,
  "year": 2020
}
print(thisdict)  # {'brand': 'Ford', 'model': 'Mustang', 'year': 2020}


Dictionary Length : To determine how many items a dictionary has, use the len() function:

> Eg-3 : Print the number of items in the dictionary:

print(len(thisdict))


Dictionary Items - Data Types
- The values in dictionary items can be of any data type:
- String, int, boolean, and list data types:

thisdict = {
  "brand": "Ford",
  "electric": False,
  "year": 1964,
  "colors": ["red", "white", "blue"]
}


type() : From Python's perspective, dictionaries are defined as objects with the data type 'dict':

> Eg-4 : Print the data type of a dictionary:

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
print(type(thisdict))    # <class 'dict'>


The dict() Constructor : It is also possible to use the dict() constructor to make a dictionary.
- Using the dict() method to make a dictionary:

> Eg-5 : 

thisdict = dict(name = "John", age = 36, country = "Norway")
print(thisdict)

