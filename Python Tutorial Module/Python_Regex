Metacharacters :
-Metacharacters are characters with a special meaning:

Character	Description	Example	Try it :

1. []	A set of characters	"[a-m]"	
2. \	Signals a special sequence (can also be used to escape special characters)	"\d"	
3. (.)	Any character (except newline character)	"he..o"	
4. ^	Starts with	"^hello"	
5. $	Ends with	"planet$"	
6. *	Zero or more occurrences	"he.*o"	
7. +	One or more occurrences	"he.+o"	
8. ?	Zero or one occurrences	"he.?o"	
9. {}	Exactly the specified number of occurrences	"he.{2}o"	
10. |	Either or	"falls|stays"	
11. ()	Capture and group	

RegEx Functions :
- The re module offers a set of functions that allows us to search a string for a match:

Function	Description :
- findall	: Returns a list containing all matches
- search	: Returns a Match object if there is a match anywhere in the string
- split	: Returns a list where the string has been split at each match
- sub	: Replaces one or many matches with a string\


Eg-1: 1. []	A set of characters	"[a-m]"	

import re
txt = "The rain in Spain"
#Find all lower case characters alphabetically between "a" and "m":
x = re.findall("[a-m]", txt)
print(x)   # ['h', 'e', 'a', 'i', 'i', 'a', 'i']

Eg-2: 2. \	Signals a special sequence (can also be used to escape special characters)	"\d"	

import re
txt = "That will be 59 dollars"
#Find all digit characters:
x = re.findall("\d", txt)
print(x)  # ['5', '9']


Eg-3: 3. (.)	Any character (except newline character)	"he..o"	

import re
txt = "hello planet"
#Search for a sequence that starts with "he", followed by two (any) characters, and an "o":
x = re.findall("he..o", txt)
print(x)


Eg-4:^	Starts with	"^hello"

import re
txt = "hello planet"
#Check if the string starts with 'hello':
x = re.findall("^hello", txt)
if x:
  print("Yes, the string starts with 'hello'")
else:
  print("No match")  #Yes, the string starts with 'hello'.
  
  
Eg-5: $	Ends with	"planet$"	

import re
txt = "hello planet"
#Check if the string ends with 'planet':
x = re.findall("planet$", txt)
if x:
  print("Yes, the string ends with 'planet'")
else:
  print("No match")
  
  
Eg-6: *	Zero or more occurrences	"he.*o"	

import re
txt = "hello planet"
#Search for a sequence that starts with "he", followed by 0 or more  (any) characters, and an "o":
x = re.findall("he.*o", txt)
print(x)


Eg-7: +	One or more occurrences	"he.+o"	

import re
txt = "hello planet"
#Search for a sequence that starts with "he", followed by 1 or more  (any) characters, and an "o":
x = re.findall("he.+o", txt)
print(x)

Eg-8:  ?	Zero or one occurrences	"he.?o"	

import re
txt = "hello planet"
#Search for a sequence that starts with "he", followed by 0 or 1  (any) character, and an "o":
x = re.findall("he.?o", txt)
print(x)      #This time we got no match, because there were not zero, not one, but two characters between "he" and the "o"


Eg-9: {}	Exactly the specified number of occurrences	"he.{2}o"

import re
txt = "hello planet"
#Search for a sequence that starts with "he", followed excactly 2 (any) characters, and an "o":
x = re.findall("he.{2}o", txt)
print(x)


Eg-10: |	Either or	"falls|stays"	

import re
txt = "The rain in Spain falls mainly in the plain!"
#Check if the string contains either "falls" or "stays":
x = re.findall("falls|stays", txt)
print(x)
if x:
  print("Yes, there is at least one match!")
else:
  print("No match")
  
  
  
The findall() Function :\

- The findall() function returns a list containing all matches.

Eg-11: Print a list of all matches:

import re
txt = "The rain in Spain"
x = re.findall("ai", txt)
print(x)  


Eg-12: The list contains the matches in the order they are found.

- If no matches are found, an empty list is returned:

Return an empty list if no match was found:

import re
txt = "The rain in Spain"
x = re.findall("Portugal", txt)
print(x)

Eg-13: The search() Function :

- The search() function searches the string for a match, and returns a Match object if there is a match.
- If there is more than one match, only the first occurrence of the match will be returned:


Search for the first white-space character in the string:

import re
txt = "The rain in Spain"
x = re.search("\s", txt)
print("The first white-space character is located in position:", x.start())


Eg-14: If no matches are found, the value None is returned:

- Make a search that returns no match:

import re
txt = "The rain in Spain"
x = re.search("Portugal", txt)
print(x)


Eg-15: The split() Function
- The split() function returns a list where the string has been split at each match:
- Split at each white-space character:

import re
txt = "The rain in Spain"
x = re.split("\s", txt)
print(x)


Eg-16: The sub() Function
- The sub() function replaces the matches with the text of your choice:

Replace every white-space character with the number 9:

import re
txt = "The rain in Spain"
x = re.sub("\s", "9", txt)
print(x)


Eg-17: Match Object :
- A Match Object is an object containing information about the search and the result.
- Note: If there is no match, the value None will be returned, instead of the Match Object.

Do a search that will return a Match Object:

import re
txt = "The rain in Spain"
x = re.search("ai", txt)
print(x) #this will print an object
