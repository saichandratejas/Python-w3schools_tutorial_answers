Sort List Alphanumerically:
-List objects have a sort() method that will sort the list alphanumerically, ascending, by default:

> Eg-1:

thislist = ["orange", "mango", "kiwi", "pineapple", "banana"]
thislist.sort()
print(thislist)  #['banana', 'kiwi', 'mango', 'orange', 'pineapple']

Sort Descending :
- To sort descending, use the keyword argument reverse = True:

> Eg-2:

thislist = ["orange", "mango", "kiwi", "pineapple", "banana"]
thislist.sort(reverse = True)
print(thislist)    #['pineapple', 'orange', 'mango', 'kiwi', 'banana']

Customize Sort Function:
- You can also customize your own function by using the keyword argument key = function.
- The function will return a number that will be used to sort the list (the lowest number first)

> Eg-3:

Sort the list based on how close the number is to 50:

def myfunc(n):
  return abs(n - 50)
thislist = [100, 50, 65, 82, 23]
thislist.sort(key = myfunc)
print(thislist)     #[50, 65, 23, 82, 100]


Case Insensitive Sort :
- By default the sort() method is case sensitive, resulting in all capital letters being sorted before lower case letters

> Eg-4:

thislist = ["banana", "Orange", "Kiwi", "cherry"]
thislist.sort()
print(thislist)   #['Kiwi', 'Orange', 'banana', 'cherry']


> Eg-5:

thislist = ["banana", "Orange", "Kiwi", "cherry"]
thislist.sort(key = str.lower)
print(thislist)   #['banana', 'cherry', 'Kiwi', 'Orange']

Reverse Order:
- What if you want to reverse the order of a list, regardless of the alphabet?
- The reverse() method reverses the current sorting order of the elements.

> Eg-6:

thislist = ["banana", "Orange", "Kiwi", "cherry"]
thislist.reverse()
print(thislist)    #['cherry', 'Kiwi', 'Orange', 'banana']




